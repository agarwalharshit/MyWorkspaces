package com.ctci;

import java.util.HashSet;
import java.util.LinkedList;

public class Chap2LinkesList {
	
	public static void main(String[] args) {
		LinkedListNode<Integer> ll= new LinkedListNode<Integer>(5,new LinkedListNode<Integer>(7,new LinkedListNode<Integer>(3,new LinkedListNode<Integer>(7,new LinkedListNode<Integer>(5)))));
		
		LinkedListNode<Integer> toBeDeleted= new LinkedListNode<Integer>(3);
		
		Chap2LinkesList ch = new Chap2LinkesList();
		ll=ch.q1RemoveDupsMethod2(ll);
		
		while(ll!=null){
			System.out.println(ll.data);
			ll=ll.next;
		}
		
	}

	void q3DeleteFromMiddle(LinkedListNode<Integer> node,LinkedListNode<Integer> toBeDeleted){
		LinkedListNode<Integer> current=node;
		if(node==null || toBeDeleted==null){
			return node;
		}
		if(node.data==toBeDeleted.data){
			return null;
		}
		while(current.next!=null){
			if(current.data==toBeDeleted.data){
				current.next=current.next.next;
			}
		}
	}
	
	
	public LinkedListNode<Integer> q1RemoveDups(LinkedListNode<Integer> node){
		LinkedListNode<Integer> p1=node;
		LinkedListNode<Integer> p2=node;
		HashSet<Integer> hs = new HashSet<Integer>();
		while(p1!=null){
			if(hs.contains(p1.data)){
				p2.next=p1.next;
				p1.next=null;
				p1=p2.next;
			}else{
				hs.add(p1.data);
				p2=p1;
				p1=p1.next;
			}
		}
		return node;
	}
	
	public LinkedListNode<Integer> q1RemoveDupsMethod2(LinkedListNode<Integer> node){
		LinkedListNode<Integer> p1=node;
		LinkedListNode<Integer> p2=node;
		while(null!=p1){
			p2=p1;
			while( null!=p2.next){
				if(p2.next.data==p1.data){
					p2.next=p2.next.next;
				}else{
				p2=p2.next;}
			}
			p1=p1.next;
		}
		return node;
	}
	
	
	
}
